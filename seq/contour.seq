R00:00:00 cam.STOP

; Set up the frame pathing
R00:00:00 cam.STREAM VIS    ; Raw camera stream goes to vision
R00:00:00 vis.STREAM NAV    ; Vision process stream goes to Nav to control the car

; Nav always streams to VideoStreamer
; We can view the Nav frame results via Vlc
R00:00:00 videoStreamer.HOSTNAME_PRM_SET "192.168.1.220"
R00:00:00 videoStreamer.DISPLAY UDP
R00:00:00 videoStreamer.OPEN

; Set up the vision pipeline
R00:00:00 vis.CLEAR

; Gradient will detect edges in the image by doing the following
;   1. Gaussian blur
;   2. Laplacian filter to find derivative
;   3. Absolute value of derivative with some scaling factor
;   4. Erosion to get rid of small dots
;   5. Ostu thresholding (dynamic) for 30 frames, then binary threshold
R00:00:00 vis.INTERPOLATION_PRM_SET NEAREST
R00:00:00 vis.DOWNSCALE_PRM_SET 8
R00:00:00 vis.PIPE DOWNSCALE

R00:00:00 vis.WARP_SCALE_X_PRM_SET 0.9
R00:00:00 vis.WARP_SCALE_Y_PRM_SET 0.9
R00:00:00 vis.WARP_TRANSLATE_X_PRM_SET 0.0
R00:00:00 vis.WARP_TRANSLATE_Y_PRM_SET 200.0
R00:00:00 vis.PIPE WARP

; Low pass filter to get rid of noise
; Needed for edge detection
R00:00:00 vis.GAUSSIAN_SIGMA_PRM_SET 2.0
R00:00:00 vis.PIPE GAUSSIAN

; Perform the actual edge detection on the image
; Performs dx and dy and adds these together
; Absolute value of gradient is used
R00:00:00 vis.PIPE GRADIENT

; Calculate Otsu threshold value for the first 30 frames
; and then use the average of these values to perform simple
; binary thresholding.
R00:00:00 vis.OTSU_FRAMES_PRM_SET 30
R00:00:00 vis.PIPE OTSU_THRESHOLD

; The actual Nav algorithm to control the car
R00:00:00 nav.RUN DIAG_CONTOUR

; Start the stream, this starts all the other components
R00:00:00 cam.START
