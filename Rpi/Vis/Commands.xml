<commands>
    <command kind="sync" opcode="0" mnemonic="STREAM">
        <comment>
            Start a raw video stream
            Runs at the rate of the rate group connected to raw_video
        </comment>
        <args>
            <arg name="listener" type="Rpi::VisListener"/>
        </args>
    </command>
    <command kind="sync" opcode="1" mnemonic="CLEAR">
        <comment>
            Clear the vision pipeline to make way for
            a new pipe
        </comment>
    </command>
    <command kind="sync" opcode="2" mnemonic="PIPE">
        <comment>
            Add a stage to the vision pipeline
        </comment>
        <args>
            <arg name="stage" type="Rpi::VisPipe"/>
        </args>
    </command>
    <command kind="sync" opcode="3" mnemonic="RECORD_FILE">
        <comment>
            Record pipeline metadata over a certain period of time. Fails
            if there is a running recording request in progress. Use RECORD_TIMEOUT
            wait for the recording to clear.
        </comment>
        <args>
            <arg name="record_type" type="ENUM">
                <comment>
                    Record type to pass through the components
                </comment>
                <enum name="VisRecordType">
                    <item name="CALIBRATION_RECORD"/>
                    <item name="WARP_RECORD"/>
                </enum>
            </arg>
            <arg name="frame_count" type="U32">
                <comment>
                    Number of frames to record metadata product over
                </comment>
            </arg>
            <arg name="filename" type="string" size="80">
                <comment>
                    File to write the data product down to
                </comment>
            </arg>
        </args>
    </command>
    <command kind="sync" opcode="4" mnemonic="RECORD_WAIT">
        <comment>
            Waits until recording has finished
        </comment>
    </command>
    <command kind="sync" opcode="5" mnemonic="MASK_QUAD">
        <comment>
            Add a pipeline stage to mask a quadrilateral a certain color
        </comment>
        <args>
            <arg name="color" type="U8"/>

            <arg name="c1x" type="F32"/>
            <arg name="c1y" type="F32"/>

            <arg name="c2x" type="F32"/>
            <arg name="c2y" type="F32"/>

            <arg name="c3x" type="F32"/>
            <arg name="c3y" type="F32"/>

            <arg name="c4x" type="F32"/>
            <arg name="c4y" type="F32"/>
        </args>
    </command>
</commands>
